// Online Java Compiler
// Use this editor to write, compile and run your Java code online

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class ListNode {
    int coeff;
    int power;
    ListNode next;
    ListNode(int data, int pow){
        coeff=data;
        power=pow;
        this.next=null;
    }
}

class Implementation{
    
    ListNode insert(int coeff, int pow, ListNode head){
        ListNode newnode=new ListNode(coeff, pow);
        if(head==null || head.power<pow){
            newnode.next=head;
            head=newnode;
            return head;
        }
        ListNode temp=head;
        while(temp.next!=null && temp.next.power>=pow){
            temp=temp.next;
        }
        newnode.next=temp.next;
        temp.next=newnode;
        return head;
    }
    
    void traversal(ListNode head){
        if(head==null){
            System.out.println(0);
            return;
        }
        
        ListNode temp=head;
        
        while(temp!=null){
            if(temp.coeff!=0){
                if(temp!=head)
                System.out.print("+");
                System.out.print(temp.coeff+"x^"+temp.power);
            }
            temp=temp.next;
        }
    }
    
    ListNode sub(ListNode p1, ListNode p2, ListNode res){
        while(p1!=null && p2!=null){
            if(p1.power==p2.power){
                int c=p1.coeff-p2.coeff;
                if(c!=0)
                   res= insert(c, p1.power, res);
                p1=p1.next;
                p2=p2.next;
            }
            else if(p1.power>p2.power){
                res=insert(p1.coeff, p1.power, res);
                p1=p1.next;
            }
            else{
                res=insert(p2.coeff, p2.power, res);
                p2=p2.next;
            }
        }
        
        while(p1!=null){
            res=insert(p1.coeff, p1.power, res);
            p1=p1.next;
        }
        
        while(p2!=null){
            res=insert(p2.coeff, p2.power, res);
            p2=p2.next;
        }
        return res;
    }
}

class Main {
    public static void main(String[] args) {
        Implementation node= new Implementation();
        ListNode head1=null;
        ListNode head2=null;
        head1=node.insert(-2, 2, head1);
        head1=node.insert(5, 1, head1);
        head1=node.insert(7, 0, head1);
     
        node.traversal(head1);
        System.out.println();
        head2=node.insert(-3, 2, head2);
        head2=node.insert(1, 1, head2);
        head2=node.insert(7, 0, head2);
        node.traversal(head2);
        
        ListNode res=null;
        res=node.sub(head1, head2, res);
        
        System.out.println();
        
        node.traversal(res);
    }
}